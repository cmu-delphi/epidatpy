# This file was derived from the PyPA Sample Project
# https://github.com/pypa/sampleproject

# Guide (user-friendly):
# https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

# Specification (technical, formal):
# https://packaging.python.org/en/latest/specifications/pyproject-toml/


[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "epidatpy"
version = "0.5.0"
description = "A programmatic interface to Delphi's Epidata API."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Delphi Research Group" }]
maintainers = [{ name = "Dmitry Shemetov", email = "dshemeto@andrew.cmu.edu" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.8"
dependencies = [
    "appdirs",
    "diskcache",
    "epiweeks>=2.1",
    "pandas>=1",
    "requests>=2.25",
    "tenacity",
]

[project.optional-dependencies]
dev = [
    "ipykernel",
    "matplotlib",
    "mypy",
    "nbsphinx",
    "pylint",
    "pytest",
    "recommonmark",
    "ruff",
    "sphinx_rtd_theme",
    "sphinx-autodoc-typehints",
    "sphinx",
    "twine",
    "types-requests",
]

[project.urls]
homepage = "https://github.com/cmu-delphi/epidatpy"
repository = "https://github.com/cmu-delphi/epidatpy"


[tool.ruff]
line-length = 120
format.docstring-code-format = true
format.docstring-code-line-length = "dynamic"
lint.extend-select = [
    "I",  # isort
    "UP", # pyupgrade
]

[tool.pylint]
max-line-length = 120
min-public-methods = 1
disable = [
    "duplicate-code",
    "invalid-name",
    "missing-module-docstring",
    "missing-function-docstring",
    "too-many-arguments",
    "too-many-locals",
    "too-many-lines",
    "too-many-public-methods",
    "too-many-instance-attributes",
    "too-many-lines",
    "too-many-return-statements",
    "too-many-branches",
]

[tool.mypy]
ignore_missing_imports = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = false
warn_redundant_casts = false
warn_unused_ignores = true
warn_return_any = true
exclude = "(tasks|setup).py"
